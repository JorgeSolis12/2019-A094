/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package daltonic_show;

import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import java.util.*;
import javax.swing.JOptionPane;

/**
 *
 * @author nirfa
 */

public class crear_paciente extends javax.swing.JFrame {

    /**
     * Creates new form crear_paciente
     */
    public crear_paciente() {
        initComponents();
        Image icon = new ImageIcon(getClass().getResource("icon.png")).getImage();
        setIconImage(icon);
        this.setTitle("Diagnosticar Paciente");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        day = new javax.swing.JTextField();
        postname = new javax.swing.JTextField();
        mes = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        agregar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Nombre:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(50, 90, 100, 40);
        getContentPane().add(name);
        name.setBounds(50, 140, 460, 30);
        getContentPane().add(day);
        day.setBounds(60, 360, 50, 40);

        postname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postnameActionPerformed(evt);
            }
        });
        getContentPane().add(postname);
        postname.setBounds(50, 240, 460, 30);

        mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesActionPerformed(evt);
            }
        });
        getContentPane().add(mes);
        mes.setBounds(150, 360, 50, 40);

        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });
        getContentPane().add(year);
        year.setBounds(250, 360, 140, 40);

        agregar.setText("Diagnosticar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });
        getContentPane().add(agregar);
        agregar.setBounds(290, 440, 110, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("/");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(220, 360, 20, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("/");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(120, 360, 20, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setText("Fecha de nacimiento:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 310, 390, 40);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Apeidos:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(50, 180, 120, 50);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/daltonic_show/66539476-fondo-de-póquer-de-color-azul-claro-minimalista-con-textura-transparente-compuesta-de-símbolos-de-la-tarj.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 670, 510);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void postnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_postnameActionPerformed

    private void mesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mesActionPerformed

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        // TODO add your handling code here:
        String nombre = name.getText();
        String apeido = postname.getText();
        String dia = day.getText();
        String m = mes.getText();
        String ano = year.getText();
        
        List<String> fallo = new ArrayList<String>();
        boolean flag = true;
        boolean val = true;
        int caso = 0;
        
        if(nombre.length()==0){
            fallo.add("Nombre");
            caso++;
            flag = false;
        }
        
        if(apeido.length()==0){
            fallo.add("Apeido");
            caso++;
            flag = false;
        }
        
        if(dia.length()==0){
            
            fallo.add("Día");
            caso++; 
            flag = false;
        }
        else{
            
            int bi = Integer.parseInt(dia);
            int nen = Integer.parseInt(ano);
            int getsu = Integer.parseInt(m);
            if(bi == 0){
                val = false;
            }
            else{
                int biciesto = nen%4;
                if(biciesto != 0){
                    if(getsu ==2){
                        if(bi>=29){
                            val = false;
                        }
                    }
                    
                }
            }
            if(getsu<8){
                if(getsu !=2){
                    if(getsu%2==0){
                        if(bi>30){
                            val= false;
                        }
                    }
                    else{
                        if(bi>31){
                            val= false;
                        }
                    }
                }
            }
            else if(getsu >=8){
                if(getsu%2==0){
                            if(bi>31){
                                val= false;
                            }
                        }
                        else{
                            if(bi>30){
                                val= false;
                            }
                        }
            }
        }
        
        if(m.length()==0){
            fallo.add("Mes");
            caso++;
            flag = false;
        }
        else{
            int getsu = Integer.parseInt(m);
            if(getsu>12){
                val = false;
            }
        }
        
        if(ano.length()==0){
            fallo.add("Año");
            caso++; 
            flag = false;
        }
        
        if(val == true){
        
            if(flag == true){
                
                String fecha = ano+"-"+m+"-"+dia;
                int resultado = 0; 
                Connection cnx = null;
                ResultSet rs = null;
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(crear_paciente.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    cnx = DriverManager.getConnection("jdbc:mysql://localhost/bd_paciente?useTimezone=true&serverTimezone=UTC&useSSL=false", "jorgesolis12", "root2");
                } catch (SQLException ex) {
                    Logger.getLogger(crear_paciente.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    Statement st = cnx.createStatement();
                } catch (SQLException ex) {
                    Logger.getLogger(crear_paciente.class.getName()).log(Level.SEVERE, null, ex);
                }
                PreparedStatement usuario = null;
                try {
                    usuario = cnx.prepareStatement("INSERT INTO paciente(nombre,apeido,fecha_de_nacimiento,fecha_de_ingreso,fecha_de_ultima_cita,fecha_de_siguiente_cita) VALUES (?,?,?,?,?,?)");
                } catch (SQLException ex) {
                    Logger.getLogger(crear_paciente.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    usuario.setString(1,nombre);
                    usuario.setString(2,apeido);
                    
                                        
                    usuario.setString(3, fecha);

                    Calendar date = new GregorianCalendar();
                    int dia_ingreso = date.get(Calendar.DAY_OF_MONTH);
                    int mes_ingreso = date.get(Calendar.MONTH)+1;
                    int ano_ingreso = date.get(Calendar.YEAR);
                    String fecha_ingreso = null;
                    String dia_mysql;
                    String mes_mysql;
                    String ano_mysql = Integer.toString(ano_ingreso);
                    
                    System.out.println(dia_ingreso);
                    if(dia_ingreso>9){
                        dia_mysql = Integer.toString(dia_ingreso);
                    }
                    else{
                        dia_mysql = "0"+Integer.toString(dia_ingreso);
                    }
                    
                    if(mes_ingreso>9){
                        mes_mysql = Integer.toString(mes_ingreso);
                    }
                    else{
                        mes_mysql ="0"+Integer.toString(mes_ingreso);
                    }
                    
                    
                    fecha_ingreso = ano_mysql+"-"+mes_mysql+"-"+dia_mysql;
                    
                    SimpleDateFormat formatofecha = new SimpleDateFormat("yyyy-MM-dd");
                    String pasofecha;
  
                    usuario.setString(4, fecha_ingreso);
                    usuario.setString(5, fecha_ingreso);
                    usuario.setString(6, fecha_ingreso);
                    
                    int rowsUpdated = usuario.executeUpdate();
                    if (rowsUpdated > 0) {
                        this.setVisible(false);
                    }
                    
                } catch (SQLException ex) {
                    Logger.getLogger(crear_paciente.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                JOptionPane.showMessageDialog(null, "Usuario crado", "Información", JOptionPane.INFORMATION_MESSAGE, null); 
                
            }
            else{
                switch(caso){
                    case 1:
                        JOptionPane.showMessageDialog(null, "Campo de "+fallo.get(0)+" vacio", "Error", JOptionPane.ERROR_MESSAGE, null); 

                    case 2:
                        JOptionPane.showMessageDialog(null, "Campo de "+fallo.get(0)+", "+fallo.get(1) +" vacio", "Error", JOptionPane.ERROR_MESSAGE, null); 

                    case 3:
                        JOptionPane.showMessageDialog(null, "Campo de "+fallo.get(0)+","+fallo.get(1)+", "+fallo.get(2)+" vacio", "Error", JOptionPane.ERROR_MESSAGE, null); 

                    case 4:
                        JOptionPane.showMessageDialog(null, "Campo de "+fallo.get(0)+", "+fallo.get(1)+", "+fallo.get(2)+", "+fallo.get(3)+" vacio", "Error", JOptionPane.ERROR_MESSAGE, null); 

                    case 5:
                        JOptionPane.showMessageDialog(null, "Campo de "+fallo.get(0)+", "+fallo.get(1)+", "+fallo.get(2)+", "+fallo.get(3)+","+fallo.get(4)+" vacio", "Error", JOptionPane.ERROR_MESSAGE, null); 

                }


            }
        }
        else{
            
            JOptionPane.showMessageDialog(null, "Fecha no Valida", "Error", JOptionPane.ERROR_MESSAGE, null); 
        }
    }//GEN-LAST:event_agregarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(crear_paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(crear_paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(crear_paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(crear_paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new crear_paciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JTextField day;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField mes;
    private javax.swing.JTextField name;
    private javax.swing.JTextField postname;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
