/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package daltonic_show;

import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author nirfa
 */
public class agendar_cita extends javax.swing.JFrame {

    /**
     * Creates new form agendar_cita
     */
    int id_a = 0;
    Connection cnx = null;
    ResultSet rs = null;
    
    public agendar_cita(int id) throws SQLException {
        id_a = id;
        Image icon = new ImageIcon(getClass().getResource("icon.png")).getImage();
        setIconImage(icon);
        this.setTitle("Agendar cita");
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        day = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        month = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        disponibilidad = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayActionPerformed(evt);
            }
        });
        getContentPane().add(day);
        day.setBounds(30, 280, 50, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel4.setText("/");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(160, 270, 34, 60);

        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });
        getContentPane().add(month);
        month.setBounds(110, 280, 50, 40);
        getContentPane().add(year);
        year.setBounds(180, 280, 100, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel5.setText("/");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(90, 270, 34, 60);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Ingrese la fecha:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 250, 170, 30);

        disponibilidad.setText("Buscar Disponibilidad");
        disponibilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disponibilidadActionPerformed(evt);
            }
        });
        getContentPane().add(disponibilidad);
        disponibilidad.setBounds(60, 340, 170, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/daltonic_show/hora.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, -90, 870, 530);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/daltonic_show/fondo-gris-tecnologia_1035-9343.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 630, 407);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayActionPerformed

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthActionPerformed

    private void disponibilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disponibilidadActionPerformed
        // TODO add your handling code here:
        String ano = year.getText();
        String mes = month.getText();
        String dia = day.getText();
        
        boolean flag = true;
        if(ano.length() != 4){
            flag = false;
        }
        if(mes.length() != 2){
            flag = false;
        }
        if(dia.length() != 2){
            flag = false;
        }
        int bi = Integer.parseInt(dia);
        int nen = Integer.parseInt(ano);
        int getsu = Integer.parseInt(mes);
        if(bi == 0){
            flag = false;
        }
        else{
            int biciesto = nen%4;
            if(biciesto != 0){
                if(getsu ==2){
                    if(bi>=29){
                        flag = false;
                    }
                }

            }
        }
        if(getsu<8){
            if(getsu !=2){
                if(getsu%2==0){
                    if(bi>30){
                        flag= false;
                    }
                }
                else{
                    if(bi>31){
                        flag= false;
                    }
                }
            }
        }
        else if(getsu >=8){
            if(getsu%2==0){
                        if(bi>31){
                            flag= false;
                        }
                    }
                    else{
                        if(bi>30){
                            flag= false;
                        }
                    }
        }
        
        Calendar date = new GregorianCalendar();
        int dia_cita = date.get(Calendar.DAY_OF_MONTH);
        int mes_cita = date.get(Calendar.MONTH)+1;
        int ano_cita = date.get(Calendar.YEAR);
        
        System.out.println(mes_cita);
        System.out.println(getsu);
        
        System.out.println(dia_cita);
        System.out.println(bi);
        if(nen<ano_cita){
            flag = false;
        }
        
        if(getsu<mes_cita){
            if(nen<ano_cita){
                flag = false;
            }
        }
        
        if(bi < dia_cita){
            if(nen<ano_cita){
                if(getsu < mes_cita){
                    flag = false;
                }
            }
        }
        
        if(flag == false){
            JOptionPane.showMessageDialog(null, "Existe algún campo vacio o invalido", "Error", JOptionPane.ERROR_MESSAGE, null); 
        }
        else{
            try {
                Class.forName("com.mysql.jdbc.Driver");
                cnx = DriverManager.getConnection("jdbc:mysql://localhost/bd_paciente?useTimezone=true&serverTimezone=UTC&useSSL=false", "jorgesolis12", "root2");
                String fecha = ano+"-"+mes+"-"+dia;
                Statement st = cnx.createStatement();
                
                String SSQL="SELECT fecha_de_siguiente_cita FROM paciente WHERE id ="+id_a;
                int i = 0;
                String fecha_ultima = null;
                rs = st.executeQuery(SSQL);
                while(rs.next()){
                  String pattern = "yyyy/MM/dd";   
                  DateFormat df = new SimpleDateFormat(pattern);
                  fecha_ultima = df.format(rs.getDate("fecha_de_siguiente_cita"));
                }
                
                String sql = "UPDATE paciente SET fecha_de_ultima_cita =?,fecha_de_siguiente_cita=? WHERE id=?";
                PreparedStatement statement = cnx.prepareStatement(sql);
                statement.setString(1, fecha_ultima);
                statement.setString(2, fecha);
                statement.setString(3, Integer.toString(id_a));
                
                int rowsUpdated = statement.executeUpdate();
                if (rowsUpdated > 0) {
                 JOptionPane.showMessageDialog(null, "Fecha agendada", "Información", JOptionPane.INFORMATION_MESSAGE, null);
                }
                } catch (SQLException ex) {
                Logger.getLogger(agendar_cita.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(agendar_cita.class.getName()).log(Level.SEVERE, null, ex);
            }
                
                
        }
    }//GEN-LAST:event_disponibilidadActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField day;
    private javax.swing.JButton disponibilidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField month;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
